self.JSDON=function(e){"use strict";const{parse:t}=JSON,a=e=>{const t=e.length-1,a=e[t];"number"==typeof a&&a<0?e[t]+=-1:e.push(-1)},s=({name:e,value:t},a)=>{a.push(2,e),t&&a.push(t)},r=(e,t,l)=>{const{nodeType:n}=e;switch(n){case 1:l(e)&&(({attributes:e,childNodes:t,localName:l},n,o)=>{n.push(1,l);for(let t=0,{length:a}=e;t<a;t++)s(e[t],n);for(let e=0,{length:a}=t;e<a;e++)r(t[e],n,o);a(n)})(e,t,l);break;case 3:case 8:l(e)&&t.push(n,e.textContent);break;case 11:case 9:l(e)&&(t.push(n),(({childNodes:e},t,s)=>{for(let a=0,{length:l}=e;a<l;a++)r(e[a],t,s);a(t)})(e,t,l));break;case 10:l(e)&&t.push(n,e.name)}},l=()=>!0;return e.fromJSON=(e,a=document)=>{const s="string"==typeof e?t(e):e,{length:r}=s,l=a.createDocumentFragment();let n=l,o=!1,c=a,h=!0,m=0;for(;m<r;){let e=s[m++];switch(e){case 1:const t=s[m++];(h||t.toLowerCase()!==n.localName.toLowerCase())&&(n=n.appendChild(c.createElement(t))),h=!0;break;case 2:const i=s[m++],p=m<r&&"string"==typeof s[m]?s[m++]:"";if("is"===i){const e=c.createElement(n.localName,{is:p});for(let{attributes:t}=n,{length:a}=t,s=0;s<a;s++)e.setAttributeNode(t[s]);n.parentNode.replaceChild(e,n),n=e}else n.setAttribute(i,p);break;case 3:n.appendChild(c.createTextNode(s[m++]));break;case 8:n.appendChild(c.createComment(s[m++]));break;case 9:const u=new a.defaultView.DOMParser;if(10===s[m])switch(m++,s[m++]){case"html":case"HTML":c=u.parseFromString("<!DOCTYPE html><html></html>","text/html");break;case"svg":case"SVG":c=u.parseFromString("<!DOCTYPE svg><svg />","image/svg+xml");break;default:c=u.parseFromString("<root />","text/xml")}else c=u.parseFromString("<html></html>","text/html");n=c.documentElement,h=!1;break;case 11:o=!0;break;default:do{e-=-1,n=n.parentNode||l}while(e<0)}}return o?l:c!==a?c:l.firstChild},e.toJSON=(e,t)=>{const a=[];return r(e,a,t||l),a},e}({});
